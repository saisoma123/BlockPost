syntax = "proto3";

package blockpost.blockpost;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "blockpost/blockpost/params.proto";


option go_package = "github.com/saisoma123/BlockPost/x/blockpost/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams     (MsgUpdateParams    ) returns (MsgUpdateParamsResponse    ) {
    option (google.api.http).post = "/blockpost.blockpost.Msg/UpdateParams";
  }
  rpc BlockPostMessage (MsgBlockPostMessage) returns (MsgBlockPostMessageResponse) {
    option (google.api.http).post = "/blockpost.blockpost.Msg/BlockPostMessage";
  }
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                             "authority";
  option           (amino.name) = "blockpost/x/blockpost/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgBlockPostMessage {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string Message = 2;
}

message MsgBlockPostMessageResponse {
    string message_id = 1;
}

